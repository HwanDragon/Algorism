#include <iostream>

#include <algorithm>

 

#define NODE_COUNT 5

 

using namespace std;

 

int nums[NODE_COUNT] = { 0, };

 

// 키값과 배열의 크기를 받아 이진탐색 시작

bool search(int n, int key)

{

	int start = 0;

	int end = n;

	int mid;

	while (start <= end)

	{

		mid = (start + end) / 2;

		if (nums[mid] == key)	// 키값과 배열의 값이 같을경우 탐색 성공

			return true;

		else if (nums[mid] < key)	// 키 값이 더 클 경우 배열의 오른쪽 탐색(시작값을 증가)

			start = mid + 1;

		else if (nums[mid] > key)	// 키값이 더 작을경우 배열의 왼쪽 탐색(끝값 감소)

			end = mid - 1;

	}

 

	return false;

}

 

int main()

{

	// 수열 입력

	nums[0] = 4;

	nums[1] = 1;

	nums[2] = 10;

	nums[3] = 2;

	nums[4] = 3;

 

	// 이진탐색을 위해 배열 정렬

	sort(nums, nums + NODE_COUNT);

 

	// 해당 수가 배열안에 있는지 질의

	int num;

	cin >> num;

	if (search(NODE_COUNT - 1, num) == true)

		cout << "1" << "\n";

	else

		cout << "0" << "\n";

	

 

	return 0;

}